<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property value="2" name="order" />
	</beans:bean>

	<!-- Tiles -->
	<beans:bean
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer" id="tilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	<beans:bean
		class="org.springframework.web.servlet.view.UrlBasedViewResolver" id="tilesViewResolver">
		<beans:property
			value="org.springframework.web.servlet.view.tiles3.TilesView" name="viewClass" />
		<beans:property value="1" name="order" />
	</beans:bean>
	
	<!-- 파일 업로드 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.support.StandardServletMultipartResolver"> 
	</beans:bean>
		
	<beans:bean id="mailSender"	class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com" />
		<beans:property name="port" value="587" /><!-- 465 or 25 -->
		<beans:property name="username" value="leehjcap4@gmail.com" />
		<beans:property name="password" value="kiltglzscargsxxs" />
		<beans:property name="defaultEncoding" value="utf-8" />
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	<!-- 네이버 oauth2 login -->
	<beans:bean id="naverClientID" class="java.lang.String">
        <beans:constructor-arg value="E68ohfVFivN9KQZJTFIx" />
	</beans:bean>
	<beans:bean id="naverClientSecret" class="java.lang.String">
	        <beans:constructor-arg value="IDZgsg3PbT" />
	</beans:bean>
	<beans:bean id="naverRedirectUrl" class="java.lang.String">
	        <beans:constructor-arg value="http://localhost:8090/login/callback2" />
	</beans:bean>
	    
	<beans:bean id="naverSns" class="airbnb.spring.auth.SNS">
        <beans:constructor-arg value="naver" />
        <beans:constructor-arg ref="naverClientID" />
        <beans:constructor-arg ref="naverClientSecret" />
        <beans:constructor-arg ref="naverRedirectUrl" />
	</beans:bean>
	<!--구글 -->
	
	<beans:bean id="googleClientID" class="java.lang.String">
        <beans:constructor-arg value="955391422565-88sjfl4ah16hpav3acqreemhkosvg5cd.apps.googleusercontent.com" />
	</beans:bean>
	<beans:bean id="googleClientSecret" class="java.lang.String">
	        <beans:constructor-arg value="PjKLR5bf76A7nu9Xkg6Mz66a" />
	</beans:bean>
    
    <beans:bean id="googleRedirectUrl" class="java.lang.String">
	        <beans:constructor-arg value="http://localhost:8090/login/callback2" />
	</beans:bean>
    
	<beans:bean id="googleSns" class="airbnb.spring.auth.SNS">
	        <beans:constructor-arg value="google" />
	        <beans:constructor-arg ref="googleClientID" />
	        <beans:constructor-arg ref="googleClientSecret" />
	        <beans:constructor-arg ref="googleRedirectUrl" />
	</beans:bean>
	
	<beans:bean id="googleConnectionFactory"       
	                                 class="org.springframework.social.google.connect.GoogleConnectionFactory">
	<beans:constructor-arg ref="googleClientID" />
	<beans:constructor-arg ref="googleClientSecret" />
	</beans:bean>
	    
	<beans:bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
	        <beans:property name="scope" value="https://www.googleapis.com/auth/userinfo.email" />
	        <!-- <beans:property name="scope" value="https://www.googleapis.com/auth/plus.login" /> -->
	        <beans:property name="redirectUri" ref="googleRedirectUrl" />
	</beans:bean>
		<!--LoginInterceptor를 Bean으로 등록 합니다.-->
	<beans:bean id="loginInterceptor" class="airbnb.spring.interceptor.LoginInterceptor"></beans:bean>
<!-- 	<interceptors>
		<interceptor>
			<mapping path="/login/loginProcess"/>
			<beans:ref bean="loginInterceptor"/>
		</interceptor>
	</interceptors> -->
	<context:component-scan base-package="airbnb.spring.service" />
	<context:component-scan base-package="airbnb.spring.controller" />

</beans:beans>
